---
MXNET_VERSION: "mxnet"
output_path: "./output/double_drfcn/imagenet_vid"
symbol: resnet_v1_101_double_drfcn_learn_nms
# gpus: '0,1,2,3,4,5,6,7'
gpus: '7'
# gpus: '0,1,2,3'
CLASS_AGNOSTIC: true
USE_PHILLY: false
SCALES:
- 600
- 1000
default:
  frequent: 100
  kvstore: device
network:
  pretrained_dir: "./model/pretrained_model"
  pretrained_resnet: "resnet_v1_101"
  pretrained_flow: "flownet"
  pretrained_epoch: 0
  PIXEL_MEANS:
  - 103.06
  - 115.90
  - 123.15
  IMAGE_STRIDE: 0
  RCNN_FEAT_STRIDE: 16
  RPN_FEAT_STRIDE: 16
  FIXED_PARAMS:
  - conv1
  - bn_conv1
  - res2
  - bn2
  - res3
  - bn3
  - res4
  - bn4
  - res5
  - bn5
  - rpn_conv_3x3
  - rpn_cls_score
  - rpn_bbox_pred
  - conv_new_1
  - offset 
  - deformable
  - fc_new
  - cls_score
  - bbox_pred
  - gamma
  - beta
  ANCHOR_RATIOS:
  - 0.5
  - 1
  - 2
  ANCHOR_SCALES:
  - 8
  - 16
  - 32
  ANCHOR_MEANS:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  ANCHOR_STDS:
  - 0.1
  - 0.1
  - 0.4
  - 0.4
  NORMALIZE_RPN: TRUE
  NUM_ANCHORS: 9
  NMS_TARGET_THRESH: '0.5'
dataset:
  NUM_CLASSES: 31
  dataset: ImageNetVID
  dataset_path: "./data/ILSVRC2015"
  image_set: DET_train_30classes+VID_train_15frames
  root_path: "./data"
  test_image_set: VID_val_videos_small
  proposal: rpn
TRAIN:
  lr: 0.00025
  lr_step: '1.333'
  warmup: false
  begin_epoch: 0
  end_epoch: 3
  model_prefix: 'double_drfcn_vid_learn_nms'
  # whether resume training
  RESUME: true
  # whether flip image
  FLIP: true
  # whether shuffle image
  SHUFFLE: true
  # whether use OHEM
  ENABLE_OHEM: false
  # size of images for each device, 1 for e2e
  BATCH_IMAGES: 1
  # e2e changes behavior of anchor loader and metric
  END2END: true
  # group images with similar aspect ratio
  ASPECT_GROUPING: true
  # R-CNN
  # rcnn rois batch size
  BATCH_ROIS: 300
  BATCH_ROIS_OHEM: 128
  # rcnn rois sampling params
  FG_FRACTION: 0.25
  FG_THRESH: 0.5
  BG_THRESH_HI: 0.5
  BG_THRESH_LO: 0.0
  # rcnn bounding box regression params
  BBOX_REGRESSION_THRESH: 0.5
  BBOX_WEIGHTS:
  - 1.0
  - 1.0
  - 1.0
  - 1.0

  # RPN anchor loader
  # rpn anchors batch size
  RPN_BATCH_SIZE: 256
  # rpn anchors sampling params
  RPN_FG_FRACTION: 0.5
  RPN_POSITIVE_OVERLAP: 0.7
  RPN_NEGATIVE_OVERLAP: 0.3
  RPN_CLOBBER_POSITIVES: false
  # rpn bounding box regression params
  RPN_BBOX_WEIGHTS:
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  RPN_POSITIVE_WEIGHT: -1.0
  # used for end2end training
  # RPN proposal
  CXX_PROPOSAL: true
  RPN_NMS_THRESH: 0.7
  RPN_PRE_NMS_TOP_N: 6000
  RPN_POST_NMS_TOP_N: 300
  RPN_MIN_SIZE: 0
  # approximate bounding box regression
  BBOX_NORMALIZATION_PRECOMPUTED: true
  BBOX_MEANS:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  BBOX_STDS:
  - 0.1
  - 0.1
  - 0.2
  - 0.2
  JOINT_TRAINING: true
  LEARN_NMS: true
  MAX_OFFSET: -1
  MIN_OFFSET: -1

TEST:
  # use rpn to generate proposal
  HAS_RPN: true
  # size of images for each device
  BATCH_IMAGES: 1
  # RPN proposal
  CXX_PROPOSAL: true
  RPN_NMS_THRESH: 0.7
  RPN_PRE_NMS_TOP_N: 6000
  RPN_POST_NMS_TOP_N: 300
  RPN_MIN_SIZE: 0
  # RCNN nms
  NMS: 0.3
  test_epoch: 2

  SOFT_NMS: false
  LEARN_NMS: true
  MERGE_METHOD: -2